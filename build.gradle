plugins {
	id 'org.springframework.boot' version '2.6.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'idea'
}

group = 'org.sustain'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {

	// For MongoDB
	implementation group: 'org.mongodb', name: 'mongodb-driver', version: '3.4.3'

	// For Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web:2.5.5'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.5'

	// For MATLAB
	//implementation files('/Applications/MATLAB_R2021a.app/java/jar/engine.jar')
	//implementation files('/Applications/MATLAB_R2021a.app/java/jar/javaenginecore.jar')
	//implementation files('/Applications/MATLAB_R2021a.app/java/jar/matlab.jar')

	implementation files('/s/parsons/l/sys/matlab/java/jar/engine.jar')
	implementation files('/s/parsons/l/sys/matlab/java/jar/javaenginecore.jar')
	implementation files('/s/parsons/l/sys/matlab/java/jar/matlab.jar')

	// For logging
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha5'
	implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '2.0.0-alpha5'

	// Use JUnit test framework
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
}

// Where to find source files for compilation
sourceSets {
	main {
		java {
			srcDirs = ['src/main/java']
		}
	}
}

test {
	useJUnitPlatform()

	testLogging {
		showStandardStreams = true
	}
}

jar {
	exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA','META-INF/LICENSE.txt','META-INF/NOTICE.txt'
	archiveClassifier = 'uber'

	from sourceSets.main.output

	dependsOn configurations.runtimeClasspath
	from {
		configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
	}
}